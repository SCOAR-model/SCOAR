# PREPROCESS ROMS/WW3 FOR SCOAR

This requires to already have generated the WRF grid (e.g. geo_em_d01.nc)

If you have access to Poseidon, you can copy the required Matlab toolbox from  
`/vortexfs1/share/seolab/SCOAR2_share/matlab_ROMS_preprocessing/SCOAR2_Prep/matlab_toolbox/`

## 1. FIRST STEP: Copy `Grid/` Directory 

[//]: # "CR: We could write a simple shell script to automate these steps."

Create a copy of the folder `Grid/` and name it after your configuration
```bash
cd SCOAR/matlab_ROMS_preprocessing/
cp -r Grid/ <experiment>
```
where `<experiment>` is the name of your configuration, e.g., `miso6`.

Change into the copied folder an rename the different folders following the name of your application, e.g.,  
`expname = miso6`  
`expname2 = miso6`

```bash
cd <experiment>
mv roms_miso6 roms_<experiment>
mv roms_miso6_nolake roms_<experiment>_nolake
```

Create a directory for the copy of the WRF grid

```bash
mkdir wrf_<experiment>
```

If you want, you can clean up the directory

```bash
rm grid/ROMS/*
rm grid/WRF/*
rm grid/WW3/*
```

## 2. SECOND STEP: Update `crocotools_param`

Open the file `crocotools_param` in your `<experiment>/` directory and modify the parameters for your grid.

## 3. THIRD STEP: Update and run `main.sh`

Set the paths to your WRF grid, topography file, and Matlab toolbox in the header of `main.sh`.

You can decide to generate or not the WW3 grid files (if yes, it requires to have the ROMS grid).

This script will run all the matlab scripts needed to genereate grids and templates for SCOAR.
Double check if you have all the matblab toolbox and all at the same location (check the addpath(**)).

Run the shell script to create the ROMS/WW3 bathymetries and grids and templates:
```
./main.sh
```
(you can turn on/off the matlab display by adding/removing options -nodisplay -nodesktop)  
(roms_expname2_nolake always need display because you need to edit the mask..)

### 3.1 UPDATE ON PROJECTION

***As of March 30, 2023, the Matlab scripts have been updated and can now be used for the Lambert projection as well. If you want to use the legacy Python code, follow the steps below.***

This is a first step to use different projections, work is needed to optimize the code.
Right now this allows to use Lambert projection. Polar projection would also be doable but would need some further modifications and it is not done in this current version.
Update on using different projections has been added using `main_lambert_proj.sh` and `wrf_to_roms.py`
This code is using Python script and it is needed to install PYROMS librairy to use it.

if using Lambert projection please CHECK `<experiment>/wrf_to_roms.py` as there are user defined variable needed in it. This needs to be improved in the future..

To add sponge layer variables run the add_sponge.py script after creating the grid (CHECK path and sponge factors in the script).
This eventually needs to be directly included in `wrf_to_roms.py`*

### END UPDATE ON PROJECTION

## 4. LAST STEP 

The generated grids are in `<experiment>/grid/ROMS/`, `<experiment>grid/WRF/`, and `<experiment>grid/WW3/`, respectively.
Copy them to your SCOAR folder `Lib/grids`

Outcomes netcdf files are in `template/*.nc `.
Copy them to your SCOAR folder `Lib/template`.

# CREATE ROMS BOUNDARY FORCING FILE USING MERCATOR DATA

Update the header in the `create_bdy_ini_files_roms_merc.sh` and run it.

Outcomes netcdf files are in `mercator_bry_expname2/bdy` and `mercator_bry_expname2/ini`.
Copy them to your SCOAR folder `Data/domains/expname/expname2/ROMS_Input`.

 

